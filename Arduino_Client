#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

const char* ssid = "AdvancedRoboticsLabs_mesh";
const char* password = "arrobot1797";
const char* serverUrl = "https://32e8-163-152-233.25.ngrok-free.app";

const int buttonPin = SDA; 

WiFiClient client;  // 이 부분을 추가

void setup() {
  pinMode(buttonPin, INPUT_PULLUP);  
  Serial.begin(115200);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  // 여기에 WiFi 연결 상태 확인 코드 추가
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("WiFi connected.");
    Serial.print("Connected to: ");
    Serial.println(WiFi.SSID()); // 연결된 네트워크의 이름 출력
    Serial.print("IP address: ");
    Serial.println(WiFi.localIP()); // 아두이노의 IP 주소 출력
  } else {
    Serial.println("WiFi not connected.");
  }
}

void loop() {
  int buttonState = digitalRead(buttonPin);
  
  if (buttonState == LOW) {
    Serial.println("1");

    // 서버에 HTTP 요청을 보내는 부분
    if(WiFi.status() == WL_CONNECTED) {   //Check WiFi connection status
      HTTPClient http;

      String fullUrl = String(serverUrl) + "/buttonPressed";
      http.begin(client, fullUrl.c_str());  //Specify request destination using the updated API
      int httpCode = http.GET();    //Send the request

      // Here we print the HTTP response code to the Serial monitor
      Serial.print("HTTP Response code: ");
      Serial.println(httpCode);

      if(httpCode > 0) { //Check the returning code
        String payload = http.getString();   //Get the request response payload
        Serial.println(payload);             //Print the response payload
      }
      http.end();   //Close connection
    }

    delay(500);  // To prevent multiple requests in short time
  }


}

